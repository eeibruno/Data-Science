# -*- coding: utf-8 -*-
"""Python Data Science.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/185aH8QxXhLxet_d1NC6nwhLBywee_6ds

# **Lógica de Programação com Python**
"""

1 + 1

'Bruno'

nome = 'Bruno'

Idade = 21

nome

Idade

print('O nome é Bruno e sua idade é 28 anos')

print(f'O nome é {nome} e sua idade é {Idade} anos')

"""# **Criando Minha Primeira Função**"""

def saudacao():
  nome = input('Qual o seu nome? ')
  print(f'Olá {nome}!')
  idade = input('Qual a sua idade? ')
  print(f'{nome}, obrigado pelas informações, Até mais!')
  
saudacao()

"""# Parâmetros"""

nome = 'João'

def saudacao_com_parametros(nome_da_pessoa):
  print(f'Olá {nome_da_pessoa}')

saudacao_com_parametros(nome)

"""# Condicional"""

idade = 20
def verifica_se_pode_dirigir(idade):
  if idade >= 18:
   print('Tem permissão para dirigir')
  else:
    print('Não tem permissão para dirigir')

verifica_se_pode_dirigir (idade)

def verifica_se_pode_dirigir_sem_parametros():
  idade = input('Qual sua idade? ')
  idade = int(idade)
  if idade >= 18:
    print('Tem Permissão para Dirigir')
  else:
    print('Não tem Permissão para Dirigir')

verifica_se_pode_dirigir_sem_parametros()

"""# Indo até a Padaria"""

#Uma pessoa vai até a padaria todos os dias. 
#À distância de sua casa até o estabelecimento é de 100 metros e todo o percurso é feito em 20 segundos.

#Calcule a velocidade Média.

distancia_percorrida = float(input('Distância Percorrida? '))
tempo_do_percurso = float(input('Tempo do Percurso? '))

velocidade = distancia_percorrida/tempo_do_percurso

print('Velocidade Média: {:.0f} m/s'.format(velocidade))

"""# Habilitação TypeError"""

def habilitacao():

  idade = int(input('Qual sua idade? '))
  if  idade >= 18:
    print('Pode tirar Habilitação')
  else:
    tempo = int(18 - idade)
    print('Calma...Espere {} anos para tirar habilitação.'.format(tempo))

habilitacao()

"""# Aula - Alura - Velocidade Média

"""

#Uma pessoa vai até a padaria todos os dias. 
#À distância de sua casa até o estabelecimento é de 100 metros e todo o percurso é feito em 20 segundos.

#Calcule a velocidade Média.

distancia_percorrida = float(input('Distância Percorrida? '))
tempo_do_percurso = float(input('Tempo do Percurso? '))

velocidade = distancia_percorrida/tempo_do_percurso

#Usando o "F" para usar variável, faz o mesmo que o format.
print(f'Velocidade: {velocidade:.0f} m/s')

#Recebe o número do usuário
num = int(input('\nInsira um número: '))

i = 0 #Contador
while i < 5:
  #Se par
  if (num % 2 == 0):
    num += 2
  #Se ímpar
  else:
    num += 1
  
  print(num)
  #Incrementa o contador
  i += 1

print('\nOs valores constam acima')

"""# Saudação """

def saudacao():
  nome = input('Qual o seu nome? ')
  print(f'Olá {nome}!')
  idade = input('Qual a sua idade? ')
  print(f'{nome}, obrigado pelas informações, Até mais!')

"""# Laços e Loops"""

idades = {18, 22, 15, 50, 12, 17}
def verifica_se_pode_dirigir(idade):
  if idade >= 18:
   print(f'{idade} anos de idade, tem permissão para dirigir')
  else:
    print(f'{idade} anos de idade, não tem permissão para dirigir')

for idade in idades:
      verifica_se_pode_dirigir(idade)

permissoes = []
idades = [20, 14, 40, 15, 18]

def verifica_se_pode_dirigir(idades, permissoes):
  for idade in idades:
    if idade >= 18:
      permissoes.append(True)
    else:
      permissoes.append(False)

  verifica_se_pode_dirigir(idades, permissoes)



"""# Qual o Valor de A?"""

a = 2

if a < 2:
  a = a + 1
else:
  a = a + 2
if a < 4:
  a = a - 4
else:
  a = a + 6

print(a)

"""# Tipos em uma Lista"""

lista = ['Bruno', 21, True, '18']

for elemento in lista:
  print(f'O elemento {elemento} é tipo, ', type(elemento))

"""# Imports"""

from random import randrange, seed

seed(11)

randrange(0, 11)

notas_matematica = []

for notas in range(8):
  notas_matematica.append(randrange(0, 11))

notas_matematica

"""# Matplotlib"""

import matplotlib.pyplot as plt

x = list(range(1, 9))
y = notas_matematica
plt.plot(x, y, marker='o')
plt.title('Notas de Matemática')
plt.xlabel('Provas')
plt.ylabel('Notas')
plt.show()

